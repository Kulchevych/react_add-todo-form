{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","maxTodosId","sort","a","b","App","useState","setUserId","setTitle","isValidTitle","setValidTitle","isValidUser","setValidUser","action","method","onSubmit","event","preventDefault","trim","newTodo","push","makeNewTodo","type","placeholder","value","onChange","target","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afc00454.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nlet maxTodosId = [...todos].sort((a, b) => b.id - a.id)[0].id;\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isValidTitle, setValidTitle] = useState(true);\n  const [isValidUser, setValidUser] = useState(true);\n\n  const makeNewTodo = () => {\n    maxTodosId += 1;\n\n    const newTodo = {\n      id: maxTodosId,\n      title,\n      completed: false,\n      userId,\n      user: getUser(userId),\n    };\n\n    todos.push(newTodo);\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setValidTitle(true);\n  };\n\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setValidUser(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setValidUser(false);\n    }\n\n    if (!title.trim()) {\n      setValidTitle(false);\n    }\n\n    if (!userId || !title.trim()) {\n      return;\n    }\n\n    makeNewTodo();\n\n    setUserId(0);\n    setTitle('');\n    setValidTitle(true);\n    setValidUser(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleChangeInput}\n            />\n          </label>\n\n          {isValidTitle || <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              defaultValue={userId}\n              value={userId}\n              onChange={handleChangeSelect}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(({ name, id }) => (\n                <option value={id} key={id}>{name}</option>\n              ))}\n            </select>\n          </label>\n\n          {isValidUser || <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}